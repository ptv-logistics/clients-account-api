/*
 * Account
 *
 * With the Account service you can manage your API keys and track their usage. It is important to note that unlike all other APIs, the Account API needs a master API key for authentication. For more details consult the [concept](./concepts/api-key-management-and-usage).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.account.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.account.Model
{
    /// <summary>
    /// ServiceUsage
    /// </summary>
    [DataContract(Name = "ServiceUsage")]
    public partial class ServiceUsage : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceUsage" /> class.
        /// </summary>
        /// <param name="name">The name of the service..</param>
        /// <param name="days">This list contains the usage by day. Only days on which the usage is non-zero will be returned..</param>
        public ServiceUsage(string name = default(string), List<UsageByDay> days = default(List<UsageByDay>))
        {
            this.Name = name;
            this.Days = days;
        }

        /// <summary>
        /// The name of the service.
        /// </summary>
        /// <value>The name of the service.</value>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// This list contains the usage by day. Only days on which the usage is non-zero will be returned.
        /// </summary>
        /// <value>This list contains the usage by day. Only days on which the usage is non-zero will be returned.</value>
        [DataMember(Name = "days", EmitDefaultValue = false)]
        public List<UsageByDay> Days { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceUsage {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Days: ").Append(Days).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
