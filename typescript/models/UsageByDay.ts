/* tslint:disable */
/* eslint-disable */
/**
 * Account
 * With the Account service you can manage your API keys and track their usage. It is important to note that unlike all other APIs, the Account API needs a master API key for authentication. For more details consult the [concept](./concepts/api-key-management-and-usage).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UsageByDay
 */
export interface UsageByDay {
    /**
     * The date formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * @type {Date}
     * @memberof UsageByDay
     */
    date?: Date;
    /**
     * Transactions charged on this day.
     * @type {number}
     * @memberof UsageByDay
     */
    transactions?: number;
    /**
     * Requests sent on this day.
     * @type {number}
     * @memberof UsageByDay
     */
    requests?: number;
}

/**
 * Check if a given object implements the UsageByDay interface.
 */
export function instanceOfUsageByDay(value: object): value is UsageByDay {
    return true;
}

export function UsageByDayFromJSON(json: any): UsageByDay {
    return UsageByDayFromJSONTyped(json, false);
}

export function UsageByDayFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsageByDay {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'transactions': json['transactions'] == null ? undefined : json['transactions'],
        'requests': json['requests'] == null ? undefined : json['requests'],
    };
}

export function UsageByDayToJSON(json: any): UsageByDay {
    return UsageByDayToJSONTyped(json, false);
}

export function UsageByDayToJSONTyped(value?: UsageByDay | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'transactions': value['transactions'],
        'requests': value['requests'],
    };
}

