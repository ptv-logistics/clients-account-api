/* tslint:disable */
/* eslint-disable */
/**
 * Account
 * With the Account service you can manage your API keys and track their usage. It is important to note that unlike all other APIs, the Account API needs a master API key for authentication. For more details consult the [concept](./concepts/api-key-management-and-usage).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApiKeyResponse } from './ApiKeyResponse';
import {
    ApiKeyResponseFromJSON,
    ApiKeyResponseFromJSONTyped,
    ApiKeyResponseToJSON,
    ApiKeyResponseToJSONTyped,
} from './ApiKeyResponse';

/**
 * 
 * @export
 * @interface ApiKeysResponse
 */
export interface ApiKeysResponse {
    /**
     * The list of API keys of the current subscription sorted by the date they were created in descending order so that the newest API key comes first.
     * @type {Array<ApiKeyResponse>}
     * @memberof ApiKeysResponse
     */
    apiKeys: Array<ApiKeyResponse>;
}

/**
 * Check if a given object implements the ApiKeysResponse interface.
 */
export function instanceOfApiKeysResponse(value: object): value is ApiKeysResponse {
    if (!('apiKeys' in value) || value['apiKeys'] === undefined) return false;
    return true;
}

export function ApiKeysResponseFromJSON(json: any): ApiKeysResponse {
    return ApiKeysResponseFromJSONTyped(json, false);
}

export function ApiKeysResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeysResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'apiKeys': ((json['apiKeys'] as Array<any>).map(ApiKeyResponseFromJSON)),
    };
}

export function ApiKeysResponseToJSON(json: any): ApiKeysResponse {
    return ApiKeysResponseToJSONTyped(json, false);
}

export function ApiKeysResponseToJSONTyped(value?: ApiKeysResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiKeys': ((value['apiKeys'] as Array<any>).map(ApiKeyResponseToJSON)),
    };
}

